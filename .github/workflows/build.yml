# Workflow name
name: Build Android APK

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          # Fetch all history for all tags and branches
          fetch-depth: 0

      # Sets up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Installs Python dependencies (Buildozer)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer

      # Installs Cython (often required by Kivy recipes)
      - name: Install Cython
        run: |
          pip install cython

      # Sets up Android SDK using android-actions/setup-android@v2
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          # Using 'cmdline-tools;11.0' and specific build-tools version
          packages: 'cmdline-tools;11.0 platform-tools build-tools;34.5.0'
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: false

      # Downloads and unzips the Android NDK (r27c)
      - name: Download NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
          unzip android-ndk-r27c-linux.zip -d $HOME/android-ndk-r27c

      # Creates and configures the buildozer.spec file
      - name: Create buildozer.spec
        run: |
          buildozer init
          # Add necessary requirements
          sed -i 's/requirements =/requirements = python3,kivy,pyttsx3,speechrecognition/' buildozer.spec
          # Set target Android API level
          sed -i 's/android.api = 31/android.api = 34/' buildozer.spec
          # Set minimum Android API level
          sed -i 's/android.minapi = 21/android.minapi = 21/' buildozer.spec
          # Set the path to the downloaded NDK
          sed -i 's|#android.ndk_path =|android.ndk_path = /home/runner/android-ndk-r27c|' buildozer.spec
          # Add required Android permissions
          sed -i 's/#android.permissions =/android.permissions = RECORD_AUDIO/' buildozer.spec
          # Explicitly set the build tools version to match the installed one
          sed -i 's/#android.build_tools_version =/android.build_tools_version = 34.5.0/' buildozer.spec
          # Explicitly set the SDK path where setup-android likely installed it
          sed -i 's|#android.sdk_path =|android.sdk_path = /usr/local/lib/android/sdk|' buildozer.spec

      # Builds the Android APK
      - name: Build APK
        run: |
          # Buildozer should now use the pre-installed SDK components specified in the spec
          buildozer android debug

      # Uploads the generated APK as an artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Helper-APK
          # Path where buildozer outputs the debug APK
          path: bin/*.apk
